# This file contains snippets that are always defined. I personally
# have snippets for signatures and often needed texts

##############
# NICE BOXES #
##############
global !p
import string, vim
import pprint

""" Maps a filetype to comment format used for boxes.
Automatically filled during usage"""
_commentDict = { }

def _parse_comments(s):
    """ Parses vim's comments option to extract comment format """
    i = iter(s.split(","))

    rv = []
    try:
        while True:
            # get the flags and text of a comment part
            flags,text = i.next().split(':', 1)

            if len(flags) == 0:
                if len(text) == 1:
                    rv.append((text,text,text, ""))
            # parse 3-part comment, but ignore those with O flag
            elif flags[0] == 's' and 'O' not in flags:
                ctriple = []
                indent = ""

                if flags[-1] in string.digits:
                    indent = " " * int(flags[-1])
                ctriple.append(text)

                flags,text = i.next().split(':', 1)
                assert(flags[0] == 'm')
                ctriple.append(text)

                flags,text = i.next().split(':', 1)
                assert(flags[0] == 'e')
                ctriple.append(text)
                ctriple.append(indent)

                rv.append(ctriple)

            elif flags[0] == 'b':
                if len(text) == 1:
                    rv.insert(0, (text,text,text, ""))

    except StopIteration:
       return rv

def _get_comment_format():
    """ Returns a 4-element tuple representing the comment format for
    the current file. """

    ft = vim.eval("&filetype")
    # check if the comment dict has the format for the current file
    if ft in _commentDict
      return _commentDict[ft]

    # otherwise parse vim's comments and add it for later use
    commentformat = _parse_comments(vim.eval("&comments"))[0]
    _commentDict[ft] = commentformat

    return commentformat

def make_box(twidth, bwidth=None):
	b, m, e, i = _get_comment_format()
	bwidth_inner = bwidth - 3 - max(len(b), len(i + e)) if bwidth else twidth + 2
	sline = b + m + bwidth_inner * m[0] + 2 * m[0]
	nspaces = (bwidth_inner - twidth) // 2
	mlines = i + m + " " + " " * nspaces
	mlinee = " " + " "*(bwidth_inner - twidth - nspaces) + m
	eline = i + m + bwidth_inner * m[0] + 2 * m[0] + e
	return sline, mlines, mlinee, eline

def foldmarker():
	"Return a tuple of (open fold marker, close fold marker)"
	return vim.eval("&foldmarker").split(",")

endglobal

################################################################################
snippet date "insert date" ws
${1:${2:`date +%m`}.${3:`date +%d`}}.`date +%Y` ${4:`whoami`}
endsnippet

snippet TODO "insert boilerplate TODO" sw
${1:`!p snip.rv = _get_comment_format()[0]`} TODO: ${2:`whoami`}: ${3:${4:`date +%m`}.${5:`date +%d`}}.`date +%Y`
$1 ${6:comment}
endsnippet

snippet FIXME "insert boilerplate FIXME" sw
${1:`!p snip.rv = _get_comment_format()[0]`} FIXME: ${2:`whoami`}: ${3:${4:`date +%m`}.${5:`date +%d`}}.`date +%Y`
$1 ${6:comment}
endsnippet

snippet NOTE "insert boilerplate NOTE" sw
${1:`!p snip.rv = _get_comment_format()[0]`} NOTE: ${2:`whoami`}: ${3:${4:`date +%m`}.${5:`date +%d`}}.`date +%Y`
$1 ${6:comment}
endsnippet

snippet INFO "insert boilerplate INFO" sw
${1:`!p snip.rv = _get_comment_format()[0]`} INFO: ${2:`whoami`}: ${3:${4:`date +%m`}.${5:`date +%d`}}.`date +%Y`
$1 ${6:comment}
endsnippet

snippet HACK "insert boilerplate HACK" sw
${1:`!p snip.rv = _get_comment_format()[0]`} HACK: ${2:`whoami`}: ${3:${4:`date +%m`}.${5:`date +%d`}}.`date +%Y`
$1 ${6:comment}
endsnippet

snippet modline "add the modline" sw
${1:`!p snip.rv = _get_comment_format()[0]`} vim: filetype=${2:`!p snip.rv = snip.ft`}:syntax=${3:`!p snip.rv = snip.ft`}:ts=4:tw=0:sw=4:sts=4:expandtab:norl:
endsnippet

snippet copyright "add copyright Information" bsw
${1:`!p snip.rv = _get_comment_format()[0]`}----------------------------------------------------------------------
$1
$1 Copyright (c) ${2:`date +%Y`}, ${3:NVIDIA Corp./ATI Technologies Inc.}
$1 All Rights Reserved.
$1
$1 This is UNPUBLISHED PROPRIETARY SOURCE CODE of $3;
$1 the contents of this file may not be disclosed to third parties, copied or
$1 duplicated in any form, in whole or in part, without the prior written
$1 permission of $3.
$1 All rights reserved.  This notice is intended as a precaution against
$1 inadvertent publication and does not imply publication or any waiver
$1 of confidentiality.  The year included in the foregoing notice is the
$1 year of creation of the work.
$1
$1 RESTRICTED RIGHTS LEGEND:
$1
$1 Use, duplication or disclosure by the Government is subject to restrictions
$1 as set forth in subdivision (c)(1)(ii) of the Rights in Technical Data
$1 and Computer Software clause at DFARS 252.227-7013, and/or in similar or
$1 successor clauses in the FAR, DOD or NASA FAR Supplement. Unpublished -
$1 rights reserved under the Copyright Laws of the United States.
$1
$1----------------------------------------------------------------------
$0
endsnippet

snippet box "A nice box with the current comment symbol" b
`!p
box = make_box(len(t[1]))
snip.rv = box[0] + '\n' + box[1]
`${1:content}`!p
box = make_box(len(t[1]))
snip.rv = box[2] + '\n' + box[3]`
$0
endsnippet

snippet bbox "A nice box over the full width" b
`!p
width = int(vim.eval("&textwidth")) or 71
box = make_box(len(t[1]), width)
snip.rv = box[0] + '\n' + box[1]
`${1:content}`!p
box = make_box(len(t[1]), width)
snip.rv = box[2] + '\n' + box[3]`
$0
endsnippet

# snippet fold "Insert a vim fold marker" b
# ${1:`!p snip.rv = _get_comment_format()[0]`} ${2:Fold description} `!p snip.rv = foldmarker()[0]`${3:1} $1
# endsnippet

snippet foldc "Insert a vim fold close marker" b
${1:`!p snip.rv = _get_comment_format()[0]`} ${2:1}`!p snip.rv = foldmarker()[1]` $1
endsnippet


snippet foldf "Insert a vim fold open marker" b
${1:`!p snip.rv = _get_comment_format()[0]`} ${2:Fold description} `!p snip.rv = foldmarker()[0]`${3:1} $1
endsnippet

snippet foldp "Insert a vim fold marker pair" b
${1:`!p snip.rv = _get_comment_format()[0]`} ${2:Fold description} `!p snip.rv = foldmarker()[0]`${3:1} $1
$1 `!p snip.rv = foldmarker()[1]`$3 $1 $2
endsnippet

snippet title "Title creation" bsw
$1=${2/./=/g}=$1
${1:`!p snip.rv = _get_comment_format()[0]`} ${2:a text} $1
$1=${2/./=/g}=$1
endsnippet

snippet filename "filename" sw
${1:`!p snip.rv = snip.fn`}
endsnippet

snippet p4header "adding a header for perforce files" bsw
${1:`!p snip.rv = _get_comment_format()[0]`}----------------------------------------------------------------------
$1
$1 Copyright (c) ${2:`date +%Y`}, ${3:NVIDIA Corp./ATI Technologies Inc.}
$1 All Rights Reserved.
$1
$1 This is UNPUBLISHED PROPRIETARY SOURCE CODE of $3;
$1 the contents of this file may not be disclosed to third parties, copied or
$1 duplicated in any form, in whole or in part, without the prior written
$1 permission of $3.
$1 All rights reserved.  This notice is intended as a precaution against
$1 inadvertent publication and does not imply publication or any waiver
$1 of confidentiality.  The year included in the foregoing notice is the
$1 year of creation of the work.
$1
$1 RESTRICTED RIGHTS LEGEND:
$1
$1 Use, duplication or disclosure by the Government is subject to restrictions
$1 as set forth in subdivision (c)(1)(ii) of the Rights in Technical Data
$1 and Computer Software clause at DFARS 252.227-7013, and/or in similar or
$1 successor clauses in the FAR, DOD or NASA FAR Supplement. Unpublished -
$1 rights reserved under the Copyright Laws of the United States.
$1
$1----------------------------------------------------------------------
$1      File Name : ${4:`!p snip.rv = snip.fn`}
$1	Created	  : ${5:${6:`date +%m`}.${7:`date +%d`}}.`date +%Y`
$1	Author	  : ${8:`whoami`}
$1	Email	  : ${9:`whoami`}@${3/.*/\L$0\E/}.com
$1
$1     \$File:\$
$1     \$Revision:\$
$1     \$Change:\$
$1     \$Author:\$
$1     \$DateTime:\$
$1----------------------------------------------------------------------
$0
endsnippet

snippet p4fileinfo "adding fileinfo for perforce files" bsw
${1:`!p snip.rv = _get_comment_format()[0]`}----------------------------------------------------------------------
$1       File Name : ${2:`!p snip.rv = snip.fn`}
$1	Created	  : ${3:${4:`date +%m`}.${5:`date +%d`}}.`date +%Y`
$1	Author	  : ${6:`whoami`}
$1	Email	  : ${7:`whoami`}@${8:nvidia/amd}.com
$1
$1     \$File:\$
$1     \$Revision:\$
$1     \$Change:\$
$1     \$Author:\$
$1     \$DateTime:\$
$1----------------------------------------------------------------------
$0
endsnippet
